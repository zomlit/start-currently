/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PricingImport } from './routes/pricing'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthedImport } from './routes/_authed'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as SignUpSplatImport } from './routes/sign-up.$'
import { Route as SignInSplatImport } from './routes/sign-in.$'
import { Route as CheckoutProductIdImport } from './routes/checkout.$productId'
import { Route as LayoutLayout2Import } from './routes/_layout/_layout-2'
import { Route as AuthedPostsImport } from './routes/_authed/posts'
import { Route as AppTestImport } from './routes/_app/test'
import { Route as AuthedPostsIndexImport } from './routes/_authed/posts.index'
import { Route as LayoutLayout2LayoutBImport } from './routes/_layout/_layout-2/layout-b'
import { Route as LayoutLayout2LayoutAImport } from './routes/_layout/_layout-2/layout-a'
import { Route as AuthedProfileSplatImport } from './routes/_authed/profile.$'
import { Route as AuthedPostsPostIdImport } from './routes/_authed/posts.$postId'
import { Route as AppAuthedDashboardImport } from './routes/_app/_authed/dashboard'

// Create/Update Routes

const PricingRoute = PricingImport.update({
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignUpSplatRoute = SignUpSplatImport.update({
  path: '/sign-up/$',
  getParentRoute: () => rootRoute,
} as any)

const SignInSplatRoute = SignInSplatImport.update({
  path: '/sign-in/$',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutProductIdRoute = CheckoutProductIdImport.update({
  path: '/checkout/$productId',
  getParentRoute: () => rootRoute,
} as any)

const LayoutLayout2Route = LayoutLayout2Import.update({
  id: '/_layout-2',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthedPostsRoute = AuthedPostsImport.update({
  path: '/posts',
  getParentRoute: () => AuthedRoute,
} as any)

const AppTestRoute = AppTestImport.update({
  path: '/test',
  getParentRoute: () => AppRoute,
} as any)

const AuthedPostsIndexRoute = AuthedPostsIndexImport.update({
  path: '/',
  getParentRoute: () => AuthedPostsRoute,
} as any)

const LayoutLayout2LayoutBRoute = LayoutLayout2LayoutBImport.update({
  path: '/layout-b',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const LayoutLayout2LayoutARoute = LayoutLayout2LayoutAImport.update({
  path: '/layout-a',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const AuthedProfileSplatRoute = AuthedProfileSplatImport.update({
  path: '/profile/$',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedPostsPostIdRoute = AuthedPostsPostIdImport.update({
  path: '/$postId',
  getParentRoute: () => AuthedPostsRoute,
} as any)

const AppAuthedDashboardRoute = AppAuthedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/_app/test': {
      id: '/_app/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof AppTestImport
      parentRoute: typeof AppImport
    }
    '/_authed/posts': {
      id: '/_authed/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof AuthedPostsImport
      parentRoute: typeof AuthedImport
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutLayout2Import
      parentRoute: typeof LayoutImport
    }
    '/checkout/$productId': {
      id: '/checkout/$productId'
      path: '/checkout/$productId'
      fullPath: '/checkout/$productId'
      preLoaderRoute: typeof CheckoutProductIdImport
      parentRoute: typeof rootRoute
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/$': {
      id: '/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof SignUpSplatImport
      parentRoute: typeof rootRoute
    }
    '/_app/_authed/dashboard': {
      id: '/_app/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppAuthedDashboardImport
      parentRoute: typeof AppImport
    }
    '/_authed/posts/$postId': {
      id: '/_authed/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof AuthedPostsPostIdImport
      parentRoute: typeof AuthedPostsImport
    }
    '/_authed/profile/$': {
      id: '/_authed/profile/$'
      path: '/profile/$'
      fullPath: '/profile/$'
      preLoaderRoute: typeof AuthedProfileSplatImport
      parentRoute: typeof AuthedImport
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof LayoutLayout2LayoutAImport
      parentRoute: typeof LayoutLayout2Import
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof LayoutLayout2LayoutBImport
      parentRoute: typeof LayoutLayout2Import
    }
    '/_authed/posts/': {
      id: '/_authed/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof AuthedPostsIndexImport
      parentRoute: typeof AuthedPostsImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppTestRoute: typeof AppTestRoute
  AppAuthedDashboardRoute: typeof AppAuthedDashboardRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppTestRoute: AppTestRoute,
  AppAuthedDashboardRoute: AppAuthedDashboardRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthedPostsRouteChildren {
  AuthedPostsPostIdRoute: typeof AuthedPostsPostIdRoute
  AuthedPostsIndexRoute: typeof AuthedPostsIndexRoute
}

const AuthedPostsRouteChildren: AuthedPostsRouteChildren = {
  AuthedPostsPostIdRoute: AuthedPostsPostIdRoute,
  AuthedPostsIndexRoute: AuthedPostsIndexRoute,
}

const AuthedPostsRouteWithChildren = AuthedPostsRoute._addFileChildren(
  AuthedPostsRouteChildren,
)

interface AuthedRouteChildren {
  AuthedPostsRoute: typeof AuthedPostsRouteWithChildren
  AuthedProfileSplatRoute: typeof AuthedProfileSplatRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedPostsRoute: AuthedPostsRouteWithChildren,
  AuthedProfileSplatRoute: AuthedProfileSplatRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface LayoutLayout2RouteChildren {
  LayoutLayout2LayoutARoute: typeof LayoutLayout2LayoutARoute
  LayoutLayout2LayoutBRoute: typeof LayoutLayout2LayoutBRoute
}

const LayoutLayout2RouteChildren: LayoutLayout2RouteChildren = {
  LayoutLayout2LayoutARoute: LayoutLayout2LayoutARoute,
  LayoutLayout2LayoutBRoute: LayoutLayout2LayoutBRoute,
}

const LayoutLayout2RouteWithChildren = LayoutLayout2Route._addFileChildren(
  LayoutLayout2RouteChildren,
)

interface LayoutRouteChildren {
  LayoutLayout2Route: typeof LayoutLayout2RouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLayout2Route: LayoutLayout2RouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/pricing': typeof PricingRoute
  '/test': typeof AppTestRoute
  '/posts': typeof AuthedPostsRouteWithChildren
  '/checkout/$productId': typeof CheckoutProductIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/dashboard': typeof AppAuthedDashboardRoute
  '/posts/$postId': typeof AuthedPostsPostIdRoute
  '/profile/$': typeof AuthedProfileSplatRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/posts/': typeof AuthedPostsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/pricing': typeof PricingRoute
  '/test': typeof AppTestRoute
  '/checkout/$productId': typeof CheckoutProductIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/dashboard': typeof AppAuthedDashboardRoute
  '/posts/$postId': typeof AuthedPostsPostIdRoute
  '/profile/$': typeof AuthedProfileSplatRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/posts': typeof AuthedPostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_authed': typeof AuthedRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/pricing': typeof PricingRoute
  '/_app/test': typeof AppTestRoute
  '/_authed/posts': typeof AuthedPostsRouteWithChildren
  '/_layout/_layout-2': typeof LayoutLayout2RouteWithChildren
  '/checkout/$productId': typeof CheckoutProductIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/_app/_authed/dashboard': typeof AppAuthedDashboardRoute
  '/_authed/posts/$postId': typeof AuthedPostsPostIdRoute
  '/_authed/profile/$': typeof AuthedProfileSplatRoute
  '/_layout/_layout-2/layout-a': typeof LayoutLayout2LayoutARoute
  '/_layout/_layout-2/layout-b': typeof LayoutLayout2LayoutBRoute
  '/_authed/posts/': typeof AuthedPostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/pricing'
    | '/test'
    | '/posts'
    | '/checkout/$productId'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/dashboard'
    | '/posts/$postId'
    | '/profile/$'
    | '/layout-a'
    | '/layout-b'
    | '/posts/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/pricing'
    | '/test'
    | '/checkout/$productId'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/dashboard'
    | '/posts/$postId'
    | '/profile/$'
    | '/layout-a'
    | '/layout-b'
    | '/posts'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_authed'
    | '/_layout'
    | '/pricing'
    | '/_app/test'
    | '/_authed/posts'
    | '/_layout/_layout-2'
    | '/checkout/$productId'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/_app/_authed/dashboard'
    | '/_authed/posts/$postId'
    | '/_authed/profile/$'
    | '/_layout/_layout-2/layout-a'
    | '/_layout/_layout-2/layout-b'
    | '/_authed/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthedRoute: typeof AuthedRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
  PricingRoute: typeof PricingRoute
  CheckoutProductIdRoute: typeof CheckoutProductIdRoute
  SignInSplatRoute: typeof SignInSplatRoute
  SignUpSplatRoute: typeof SignUpSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthedRoute: AuthedRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
  PricingRoute: PricingRoute,
  CheckoutProductIdRoute: CheckoutProductIdRoute,
  SignInSplatRoute: SignInSplatRoute,
  SignUpSplatRoute: SignUpSplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_authed",
        "/_layout",
        "/pricing",
        "/checkout/$productId",
        "/sign-in/$",
        "/sign-up/$"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/test",
        "/_app/_authed/dashboard"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/posts",
        "/_authed/profile/$"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_layout-2"
      ]
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/_app/test": {
      "filePath": "_app/test.tsx",
      "parent": "/_app"
    },
    "/_authed/posts": {
      "filePath": "_authed/posts.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/posts/$postId",
        "/_authed/posts/"
      ]
    },
    "/_layout/_layout-2": {
      "filePath": "_layout/_layout-2.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_layout-2/layout-a",
        "/_layout/_layout-2/layout-b"
      ]
    },
    "/checkout/$productId": {
      "filePath": "checkout.$productId.tsx"
    },
    "/sign-in/$": {
      "filePath": "sign-in.$.tsx"
    },
    "/sign-up/$": {
      "filePath": "sign-up.$.tsx"
    },
    "/_app/_authed/dashboard": {
      "filePath": "_app/_authed/dashboard.tsx",
      "parent": "/_app"
    },
    "/_authed/posts/$postId": {
      "filePath": "_authed/posts.$postId.tsx",
      "parent": "/_authed/posts"
    },
    "/_authed/profile/$": {
      "filePath": "_authed/profile.$.tsx",
      "parent": "/_authed"
    },
    "/_layout/_layout-2/layout-a": {
      "filePath": "_layout/_layout-2/layout-a.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_layout/_layout-2/layout-b": {
      "filePath": "_layout/_layout-2/layout-b.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_authed/posts/": {
      "filePath": "_authed/posts.index.tsx",
      "parent": "/_authed/posts"
    }
  }
}
ROUTE_MANIFEST_END */
